import { Meta, Story, Canvas } from "@storybook/addon-docs";
import { Dl, Dt, Dd } from "./";

import StyledSystemProps from "../../../.storybook/utils/styled-system-props";
import * as stories from "./definition-list.stories";

<Meta title="Definition List" parameters={{ info: { disable: true } }} />

# Definition List

## Contents

- [Quick Start](#quick-start)
- [Related Components](#related-components)
- [Examples](#examples)
- [Props](#props)

## Quick Start

```javascript
import { Dl, Dt, Dd } from "carbon-react/lib/components/definition-list";
```

## Related Components

Definition List most of the time is in use with other components. Look at the examples below

- [Tile component with Definition List](/?path=/docs/tile--with-definition-list-default "Tile component with Definition List").
- [Accordion component with Definition List](/?path=/docs/accordion--with-a-definition-list "Accordion component with Definition List").

## Examples

### Default

<Canvas>
  <Story name="default" story={stories.DefaultStory} />
</Canvas>

### Action popover and icon support

<Canvas>
  <Story name="action popover and icon support" story={stories.ActionPopoverAndIconSupport} />
</Canvas>

### Conditional rendering with `<React.Fragment />`

_CAUTION: Direct children of `Dl` can only be `<React.Fragment />`, `Dt` or `Dd`_

<Canvas>
  <Story name="with conditional rendering" story={stories.WithConditionalRendering} />
</Canvas>

### As a single column

Setting the `asSingleColumn` prop will render the `DefinitionList` as a single column. Please note that the default alignment
for `Dt` components is `right` so you will likely need to set `dtTextAlign` to `left` to achieve the layout below.

<Canvas>
  <Story name="as a single column" story={stories.AsASingleColumn} />
</Canvas>

It is also possible to create more complex layouts, like below, using single column `DefinitionList`s with other components
such as `Typography` and `Hr`.

<Canvas>
  <Story name="multiple single columns with segments" story={stories.MultipleSingleColumnsWithSegments} />
</Canvas>

### Responsive Example

<Canvas>
  <Story name="responsive" story={stories.Responsive} />
</Canvas>

## Props

### Dl

<StyledSystemProps of={Dl} noHeader spacing />

### Dt

<StyledSystemProps of={Dt} noHeader spacing defaults={{ mb: 2, pr: 3 }} />

### Dd

<StyledSystemProps of={Dd} noHeader spacing defaults={{ mb: 2 }} />
