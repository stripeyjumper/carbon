import { useState } from "react";
import { Meta, Story, Canvas, ArgsTable } from "@storybook/addon-docs";

import StyledSystemProps from "../../../.storybook/utils/styled-system-props";
import Number from ".";
import Textbox from "../textbox";
import Box from "../box";
import CarbonProvider from "../carbon-provider/carbon-provider.component";
import * as stories from "./number.stories.tsx";

<Meta title="Number Input" parameters={{ info: { disable: true } }} />

# Number

Capture whole numbers - without a decimal point.

## Contents

- [Quick Start](#quick-start)
- [Examples](#examples)
- [Props](#props)

## Quick Start

```javascript
import Number from "carbon-react/lib/components/number";
```

## Examples

### Default

<Canvas>
  <Story name="default" story={stories.Default} />
</Canvas>

### Sizes

<Canvas>
  <Story name="sizes" story={stories.Sizes} />
</Canvas>

### Disabled

<Canvas>
  <Story name="disabled" story={stories.Disabled} />
</Canvas>

### ReadOnly

<Canvas>
  <Story name="readOnly" story={stories.ReadOnly} />
</Canvas>

### AutoFocus

<Canvas>
  <Story name="autoFocus" story={stories.AutoFocus} />
</Canvas>

### With labelInline

<Canvas>
  <Story name="with labelInline" story={stories.WithLabelInline} />
</Canvas>

### With label Align

<Canvas>
  <Story name="with labelAlign" story={stories.WithLabelAlign} />
</Canvas>

### With custom labelWidth and inputWidth

<Canvas>
  <Story name="with custom labelWidth and inputWidth" story={stories.WithCustomLabelWidthAndInputWidth} />
</Canvas>

### With custom maxWidth

<Canvas>
  <Story name="with custom maxWidth" story={stories.WithCustomMaxWidth} />
</Canvas>

### With fieldHelp

<Canvas>
  <Story name="with fieldHelp" story={stories.WithFieldHelp} />
</Canvas>

### with inputHint

When the `inputHint` prop is passed, please use a full stop `.` at the end. This forces a pause 
before any other announcements, this well help screen reader users understand the hint fully.

<Canvas>
  <Story name="with inputHint" story={stories.WithInputHint} />
</Canvas>

### With labelHelp

<Canvas>
  <Story name="with labelHelp" story={stories.WithLabelHelp} />
</Canvas>

### Validations

Validation status can be set by passing `error`, `warning` or `info` prop to the component

Passing a string to these props will display a properly colored border along with a validation icon and tooltip - string value will be displayed as the tooltip message.

Passing a boolean to these props will display only a properly colored border.

For more information check our [Validations](?path=/docs/documentation-validations--string-validation "Validations") documentation page

## Props

### Number

Due to the `Textbox` component being used internally by the `Number` component all the props of `Textbox` can be applied to `Number` as well.

<StyledSystemProps of={Textbox} noHeader margin />

**Any other supplied props will be provided to the underlying HTML input element**
